{"version":3,"sources":["service/FetchData.js","components/Ability/Ability.js","components/Like/Like.js","components/Loader/Loader.js","components/Card/Card.js","App.js","index.js"],"names":["FetchData","startUrl","getResource","url","a","fetch","res","ok","console","error","status","json","getAllPokemon","getPokemon","id","getAbility","fetchData","Ability","info","useState","data","setData","collapse","setCollapse","ability","name","replace","useEffect","then","description","effect_entries","filter","item","language","className","onClick","width","height","viewBox","fill","xmlns","d","strokeWidth","effect","Like","isActive","setActive","strokeLinejoin","Loader","Card","props","style","backgroundImage","sprites","front_default","abilities","map","App","setId","count","setCount","max","random","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561be780.chunk.js","sourcesContent":["export default class FetchData {\r\n  \r\n  startUrl = 'https://pokeapi.co/api/v2/';\r\n\r\n  getResource = async url => {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      console.error('Fetch error ' + res.status);\r\n     // throw new Error('Fetch error ' + res.status)\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  getAllPokemon = async () => \r\n    await this.getResource(this.startUrl + 'pokemon/');\r\n\r\n  getPokemon = async (id) => \r\n    await this.getResource(this.startUrl + 'pokemon/' + id);\r\n\r\n  getAbility = async (url) =>\r\n    await this.getResource(url);\r\n\r\n}","import {useEffect, useState} from 'react';\r\nimport FetchData from '../../service/FetchData';\r\nimport React from 'react';\r\n\r\nconst fetchData = new FetchData();\r\n\r\nfunction Ability({info}) {\r\n  const [data, setData] = useState(false);\r\n  const [collapse, setCollapse] = useState(true)\r\n\r\n  const ability = info.ability;\r\n  let {name, url} = ability;\r\n  name = name.replace('-', ' ');\r\n  \r\n  useEffect(() => {\r\n    setCollapse(true);\r\n    fetchData.getAbility(url)\r\n      .then(data => {\r\n        setData(data);\r\n      })\r\n  }, [url])\r\n\r\n  const handleCollapse =() => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  if (data) {\r\n\r\n    let description = data.effect_entries.filter((item) => item.language.name === 'en')[0];\r\n    \r\n    return (\r\n      <li className='ability'>\r\n        <h3 onClick={handleCollapse} className='ability__title'>{name} \r\n          <svg className='ability__dropdown' width=\"11\" height=\"7\" viewBox=\"0 0 11 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M1 1L5.5 5.5L10 1\" strokeWidth=\"2\"/>\r\n          </svg>\r\n        </h3>\r\n        <p className={`ability__description ${collapse ? 'collapse' : ''}`}>\r\n          {description.effect}\r\n        </p>\r\n      </li>\r\n    )\r\n  } else {\r\n    return (\r\n      <li>\r\n        {name}\r\n      </li>\r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default Ability\r\n","import React, { useState } from 'react'\r\n\r\nfunction Like() {\r\n\r\n  const [isActive, setActive] = useState(false)\r\n\r\n  const handleToggle = () => {\r\n    setActive(!isActive);\r\n  }\r\n\r\n  return (\r\n    <svg onClick={handleToggle} className={`like ${isActive ? 'active' : ''}`} width=\"44\" height=\"37\" viewBox=\"0 0 44 37\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M12 2C6.47715 2 2 6.49148 2 12.032C2 19.424 13.3158 28.136 22 35C30.6842 28.136 42 19.424 42 12.032C42 6.49148 37.5229 2 32 2C26.4772 2 22 5.96 22 9.92C22 5.96 17.5228 2 12 2Z\" strokeWidth=\"3\" strokeLinejoin=\"round\"/>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Like;\r\n","import React from 'react'\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n  )\r\n}\r\n\r\nexport default Loader;\r\n","import {useEffect, useState} from 'react';\r\nimport FetchData from '../../service/FetchData';\r\nimport React from 'react'\r\nimport Ability from '../Ability/Ability';\r\nimport Like from '../Like/Like';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst fetchData = new FetchData();\r\n\r\nfunction Card(props) {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData.getPokemon(props.id)\r\n      .then(data => {\r\n        setData(data);\r\n      })\r\n  }, [props.id])\r\n  \r\n  if (data.name) {\r\n    const style = {\r\n      backgroundImage: `url(${data.sprites.front_default})`,\r\n    }\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card__header\">\r\n          \r\n          <div className=\"card__image\" style={style}></div>\r\n          <h1>{data.name}</h1>\r\n          <Like />\r\n          \r\n        </div>\r\n        <h2>Abilities</h2>\r\n        <ul className=\"card__abilities\">\r\n          {data.abilities.map(item => \r\n            <Ability key={item.name} info={item} />)}\r\n        </ul>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n      <Loader />\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Card\r\n","import {useEffect, useState} from 'react';\nimport FetchData from './service/FetchData';\nimport './App.scss';\nimport Card from './components/Card/Card';\n\nconst fetchData = new FetchData();\n\nfunction App() {\n  const [id, setId] = useState(1);\n  const [count, setCount] = useState(100)\n\n  function getRandomId() {\n    let min = 1;\n    let max = count;\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    setId(random);\n  }\n\n  useEffect(() => {\n    fetchData.getAllPokemon()\n      .then(data => {\n        setCount(data.count);\n      })\n  }, [])\n\n  return (\n    <>\n      <div className='container'>\n        <button className='btn random' onClick={getRandomId}>Random Pokemon</button>\n        <Card id={id} />\n      </div>\n    </>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}